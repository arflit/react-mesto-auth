[{"/home/arkady/dev/mesto-react-auth/src/index.js":"1","/home/arkady/dev/mesto-react-auth/src/reportWebVitals.js":"2","/home/arkady/dev/mesto-react-auth/src/components/App.js":"3","/home/arkady/dev/mesto-react-auth/src/components/Register.js":"4","/home/arkady/dev/mesto-react-auth/src/components/HamburgerMenu.js":"5","/home/arkady/dev/mesto-react-auth/src/components/Login.js":"6","/home/arkady/dev/mesto-react-auth/src/components/Header.js":"7","/home/arkady/dev/mesto-react-auth/src/components/Footer.js":"8","/home/arkady/dev/mesto-react-auth/src/components/ProtectedRoute.js":"9","/home/arkady/dev/mesto-react-auth/src/components/Main.js":"10","/home/arkady/dev/mesto-react-auth/src/contexts/CurrentUserContext.js":"11","/home/arkady/dev/mesto-react-auth/src/utils/api.js":"12","/home/arkady/dev/mesto-react-auth/src/components/Card.js":"13","/home/arkady/dev/mesto-react-auth/src/components/popups/PopupWithTooltip.js":"14","/home/arkady/dev/mesto-react-auth/src/components/popups/ImagePopup.js":"15","/home/arkady/dev/mesto-react-auth/src/components/popups/EditProfilePopup.js":"16","/home/arkady/dev/mesto-react-auth/src/components/popups/EditAvatarPopup.js":"17","/home/arkady/dev/mesto-react-auth/src/components/popups/PopupWithForm.js":"18","/home/arkady/dev/mesto-react-auth/src/components/popups/AddPlacePopup.js":"19","/home/arkady/dev/mesto-react-auth/src/components/popups/SubmitPopup.js":"20"},{"size":637,"mtime":1615689006203,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1615689006203,"results":"23","hashOfConfig":"22"},{"size":11232,"mtime":1615746998633,"results":"24","hashOfConfig":"22"},{"size":1931,"mtime":1615689006203,"results":"25","hashOfConfig":"22"},{"size":408,"mtime":1615689006203,"results":"26","hashOfConfig":"22"},{"size":1770,"mtime":1615689006203,"results":"27","hashOfConfig":"22"},{"size":1764,"mtime":1615689006203,"results":"28","hashOfConfig":"22"},{"size":203,"mtime":1615689006203,"results":"29","hashOfConfig":"22"},{"size":322,"mtime":1615689006203,"results":"30","hashOfConfig":"22"},{"size":2105,"mtime":1615746194983,"results":"31","hashOfConfig":"22"},{"size":85,"mtime":1615689006203,"results":"32","hashOfConfig":"22"},{"size":2569,"mtime":1618744737578,"results":"33","hashOfConfig":"22"},{"size":1474,"mtime":1615689006203,"results":"34","hashOfConfig":"22"},{"size":1186,"mtime":1615746994001,"results":"35","hashOfConfig":"22"},{"size":764,"mtime":1615719835267,"results":"36","hashOfConfig":"22"},{"size":1935,"mtime":1615744541436,"results":"37","hashOfConfig":"22"},{"size":965,"mtime":1615744622333,"results":"38","hashOfConfig":"22"},{"size":917,"mtime":1615719838486,"results":"39","hashOfConfig":"22"},{"size":1600,"mtime":1615722722467,"results":"40","hashOfConfig":"22"},{"size":513,"mtime":1615723540758,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"tld2f8",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/arkady/dev/mesto-react-auth/src/index.js",[],["85","86"],"/home/arkady/dev/mesto-react-auth/src/reportWebVitals.js",[],"/home/arkady/dev/mesto-react-auth/src/components/App.js",["87","88"],"import React from 'react'\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom'\n\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\n\nimport Login from './Login.js'\nimport Register from './Register.js'\nimport HamburgerMenu from './HamburgerMenu.js'\n\nimport PopupWithTooltip from './popups/PopupWithTooltip'\nimport ImagePopup from './popups/ImagePopup'\nimport EditProfilePopup from './popups/EditProfilePopup'\nimport EditAvatarPopup from './popups/EditAvatarPopup'\nimport AddPlacePopup from './popups/AddPlacePopup'\nimport SubmitPopup from './popups/SubmitPopup'\n\nimport { api, authApi } from '../utils/api'\nimport ProtectedRoute from './ProtectedRoute'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction App() {\n  //техническое\n  const history = useHistory()\n\n  //основные переменные\n  const [loggedIn, setLoggedIn] = React.useState(false)\n  const [cards, setCards] = React.useState([])\n  const [isMenuOpen, setMenuOpen] = React.useState(false)\n  function prepareHamburger() {\n    setMenuOpen(!isMenuOpen)\n  }\n  const [isMobile, setMobile] = React.useState(() => {\n    if (window.innerWidth < 620) {\n      return true\n    } else {\n      return false\n    }\n  })\n\n  //информация о пользователе\n  const [email, setEmail] = React.useState('arflit@gmail.com')\n  const [currentUser, setCurrentUser] = React.useState({\n    avatar:\n      'https://github.com/konjvpaljto/mesto/blob/master/src/images/avatar.jpg?raw=true',\n    name: 'Жак Ив-Кусто',\n    about: 'Исследователь океана',\n  })\n\n  //состояние попапов\n  const [selectedCard, setSelectedCard] = React.useState({})\n\n  const [tooltipPopupState, setTooltipPopupState] = React.useState({\n    open: false,\n    result: false,\n    message: '',\n  })\n  const [avatarPopupState, setAvatarPopupState] = React.useState({\n    open: false,\n  })\n  const [profilePopupState, setProfilePopupState] = React.useState({\n    open: false,\n  })\n  const [submitPopupState, setSubmitPopupState] = React.useState({\n    open: false,\n  })\n  const [addPlacePopupState, setAddPlacePopupState] = React.useState({\n    open: false,\n  })\n\n  //функции управления попапами\n  function closeAllPopups() {\n    setAvatarPopupState({\n      ...avatarPopupState,\n      open: false,\n    })\n    setProfilePopupState({\n      ...profilePopupState,\n      open: false,\n    })\n    setAddPlacePopupState({\n      ...addPlacePopupState,\n      open: false,\n    })\n    setTooltipPopupState({\n      ...tooltipPopupState,\n      open: false,\n      result: false,\n      message: '',\n    })\n    setSelectedCard({})\n    setSubmitPopupState({\n      ...submitPopupState,\n      open: false,\n    })\n  }\n\n  function handleTooltipOpen(result, message) {\n    setTooltipPopupState({\n      open: true,\n      result: result,\n      message: message,\n    })\n  }\n\n  function handleEditAvatarClick() {\n    setAvatarPopupState({\n      ...avatarPopupState,\n      open: true,\n    })\n  }\n\n  function handleProfileClick() {\n    setProfilePopupState({\n      ...profilePopupState,\n      open: true,\n    })\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupState({\n      ...addPlacePopupState,\n      open: true,\n    })\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card)\n  }\n\n  function onSubmit(card) {\n    setSubmitPopupState({\n      ...submitPopupState,\n      open: true,\n    })\n    setDelCard(card)\n  }\n\n  React.useEffect(() => {\n    const onKeypress = (evt) => {\n      if (evt.key === 'Escape') {\n        closeAllPopups()\n      }\n    }\n\n    document.addEventListener('keydown', onKeypress)\n\n    return () => {\n      document.removeEventListener('keydown', onKeypress)\n    }\n  }, [])\n\n  //функции регистрации и авторизации\n  function onSignUp(data) {\n    authApi\n      .signUp(data)\n      .then(() => {\n        handleTooltipOpen(true)\n      })\n      .then(() => {\n        setTimeout(() => {\n          onSignIn(data)\n          closeAllPopups()\n        }, 1500)\n      })\n      .catch((err) => {\n        handleTooltipOpen(false, `Не получилось зарегистрироваться: ${err}`)\n      })\n  }\n\n  function onSignIn(data) {\n    authApi\n      .signIn(data)\n      .then((res) => {\n        localStorage.setItem('token', res.token)\n        setLoggedIn(true)\n        setEmail(data.email)\n      })\n      .then(() => {\n        history.push('/cards')\n      })\n      .catch((err) => {\n        handleTooltipOpen(false, `Не получилось войти: ${err}`)\n      })\n  }\n\n  function onSignOut() {\n    setLoggedIn(false)\n    setMenuOpen(false)\n    localStorage.removeItem('token')\n  }\n\n  //функции управления данными пользователя\n  function handleUpdateUser(data) {\n    api\n      .updateUserInfo(data)\n      .then((data) => {\n        setCurrentUser(data)\n      })\n      .then(() => {\n        closeAllPopups()\n      })\n      .catch((err) => {\n        closeAllPopups()\n        handleTooltipOpen(\n          false,\n          `Не удалось обновить данные пользователя: ${err}`\n        )\n      })\n  }\n\n  function handleUpdateAvatar(data) {\n    api\n      .setNewAvatar(data.avatar)\n      .then(() => {\n        setCurrentUser({\n          ...currentUser,\n          avatar: data.avatar,\n        })\n      })\n      .then(() => {\n        closeAllPopups()\n      })\n      .catch((err) => {\n        closeAllPopups()\n        handleTooltipOpen(false, `Не удалось обновить аватар: ${err}`)\n      })\n  }\n\n  // Функции управления контентом\n\n  function handleAddPlace(data) {\n    api\n      .addNewCard(data)\n      .then((newCard) => {\n        setCards([newCard, ...cards])\n      })\n      .then(() => {\n        closeAllPopups()\n      })\n      .catch((err) => {\n        closeAllPopups()\n        handleTooltipOpen(false, `Не удалось добавить карточку: ${err}`)\n      })\n  }\n\n  const [deletingCard, setDelCard] = React.useState({})\n\n  function handleCardDelete() {\n    const isOwn = deletingCard.owner._id === currentUser._id\n    if (isOwn) {\n      api\n        .removeCard(deletingCard._id)\n        .then(() => {\n          const newCards = cards.filter((c) => {\n            if (c._id === deletingCard._id) {\n              return false\n            } else {\n              return true\n            }\n          })\n          setCards(newCards)\n        })\n        .catch((err) => {\n          handleTooltipOpen(false, `Не удалось удалить карточку: ${err}`)\n        })\n    } else {\n      handleTooltipOpen(\n        false,\n        `Не удалось удалить карточку: вы не хозяин. Нечего на скрытые кнопки жать!`\n      )\n    }\n    setDelCard({})\n    closeAllPopups()\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id)\n\n    function updateCards(newCard) {\n      const newCards = cards.map((c) => (c._id === card._id ? newCard : c))\n      setCards(newCards)\n    }\n\n    if (isLiked) {\n      api\n        .removeCardLike(card._id)\n        .then((newCard) => {\n          updateCards(newCard)\n        })\n        .catch((err) => {\n          handleTooltipOpen(false, `Не удалось поставить лайк: ${err}`)\n        })\n    } else {\n      api\n        .addCardLike(card._id)\n        .then((newCard) => {\n          updateCards(newCard)\n        })\n        .catch((err) => {\n          handleTooltipOpen(false, `Не удалось снять лайк: ${err}`)\n        })\n    }\n  }\n\n  // Функции при загрузке страницы\n\n  React.useEffect(() => {\n    if (localStorage.getItem('token')) {\n      authApi\n        .checkToken()\n        .then((data) => {\n          setEmail(data.data.email)\n          setLoggedIn(true)\n        })\n        .then(() => {\n          history.push('/cards')\n        })\n        .catch((err) => {\n          setLoggedIn(false)\n          handleTooltipOpen(false, `Не удалось авторизоваться: ${err}`)\n        })\n    }\n  }, [])\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((data) => {\n        setCurrentUser(data)\n      })\n      .catch((err) => {\n        handleTooltipOpen(\n          false,\n          `Не удалось загрузить данные пользователя: ${err}`\n        )\n      })\n  }, [email])\n\n  React.useEffect(() => {\n    api\n      .getInitialCards()\n      .then((data) => {\n        setCards(data)\n      })\n      .catch((err) => {\n        handleTooltipOpen(\n          false,\n          `Не удалось загрузить карточки с сервера: ${err}`\n        )\n      })\n  }, [email])\n\n  React.useEffect(() => {\n    const onScreenChange = () => {\n      if (window.innerWidth < 620) {\n        setMobile(true)\n      } else {\n        setMobile(false)\n        setMenuOpen(false)\n      }\n    }\n\n    window.addEventListener('resize', onScreenChange)\n\n    return () => {\n      window.removeEventListener('resize', onScreenChange)\n    }\n  }, [])\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className={isMenuOpen ? 'page page_menu_opened' : 'page'}>\n        <HamburgerMenu\n          onSignOut={onSignOut}\n          email={email}\n          isMenuOpen={isMenuOpen}\n        />\n        <Header\n          email={email}\n          loggedIn={loggedIn}\n          onSignOut={onSignOut}\n          isMenuOpen={isMenuOpen}\n          prepareHamburger={prepareHamburger}\n          isMobile={isMobile}\n        />\n        <Switch>\n          <Route path=\"/sign-in\">\n            <Login onSignIn={onSignIn} />\n          </Route>\n          <Route path=\"/sign-up\">\n            <Register onSignUp={onSignUp} />\n          </Route>\n          <ProtectedRoute\n            path=\"/cards\"\n            loggedIn={loggedIn}\n            onEditProfile={handleProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            cards={cards}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={onSubmit}\n            component={Main}\n          />\n          <Route path=\"/\">\n            {loggedIn ? <Redirect to=\"/cards\" /> : <Redirect to=\"/sign-in\" />}\n          </Route>\n        </Switch>\n\n        <Footer />\n        <PopupWithTooltip state={tooltipPopupState} onClose={closeAllPopups} />\n        <EditAvatarPopup\n          state={avatarPopupState}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <EditProfilePopup\n          state={profilePopupState}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <AddPlacePopup\n          state={addPlacePopupState}\n          onClose={closeAllPopups}\n          onAddCard={handleAddPlace}\n        />\n        <ImagePopup onClose={closeAllPopups} card={selectedCard} />\n        <SubmitPopup\n          state={submitPopupState}\n          onClose={closeAllPopups}\n          onSubmit={handleCardDelete}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  )\n}\n\nexport default App\n","/home/arkady/dev/mesto-react-auth/src/components/Register.js",[],"/home/arkady/dev/mesto-react-auth/src/components/HamburgerMenu.js",[],"/home/arkady/dev/mesto-react-auth/src/components/Login.js",["89","90","91","92"],"import React from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nfunction Login(props) {\n\n  const { onSignIn } = props;\n\n  const [email, setEmail] = React.useState('')\n  function handleChangeEmail(e) {\n    setEmail(e.target.value)\n  }\n\n  const [password, setPassword] = React.useState('')\n  function handleChangePassword(e) {\n    setPassword(e.target.value)\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log('делаю запрос')\n    onSignIn({\n      password,\n      email\n    })\n  }\n\n  return (\n    <main className=\"content\">\n      <div className=\"login-container\">\n        <form className=\"login-form\" noValidate onSubmit={handleSubmit}>\n          <h2 className=\"login-form__title\">Вход</h2>\n          <input\n            type=\"email\"\n            className=\"login-form__input\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            required\n            value={email}\n            onChange={handleChangeEmail}\n          />\n          <div className=\"popup__form-error-container\">\n            <span className=\"email-error popup__form-error\"></span>\n          </div>\n          <input\n            type=\"password\"\n            className=\"login-form__input\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Пароль\"\n            required\n            value={password}\n            onChange={handleChangePassword}\n          />\n          <div className=\"popup__form-error-container\">\n            <span className=\"password-error popup__form-error\"></span>\n          </div>\n          <button type=\"submit\" className=\"login-form__button button\">\n            Войти\n          </button>\n        </form>\n      </div>\n    </main>\n  )\n}\n\nexport default Login;\n","/home/arkady/dev/mesto-react-auth/src/components/Header.js",[],"/home/arkady/dev/mesto-react-auth/src/components/Footer.js",[],"/home/arkady/dev/mesto-react-auth/src/components/ProtectedRoute.js",[],"/home/arkady/dev/mesto-react-auth/src/components/Main.js",[],"/home/arkady/dev/mesto-react-auth/src/contexts/CurrentUserContext.js",[],"/home/arkady/dev/mesto-react-auth/src/utils/api.js",[],"/home/arkady/dev/mesto-react-auth/src/components/Card.js",[],"/home/arkady/dev/mesto-react-auth/src/components/popups/PopupWithTooltip.js",[],"/home/arkady/dev/mesto-react-auth/src/components/popups/ImagePopup.js",[],"/home/arkady/dev/mesto-react-auth/src/components/popups/EditProfilePopup.js",[],"/home/arkady/dev/mesto-react-auth/src/components/popups/EditAvatarPopup.js",[],"/home/arkady/dev/mesto-react-auth/src/components/popups/PopupWithForm.js",[],"/home/arkady/dev/mesto-react-auth/src/components/popups/AddPlacePopup.js",[],"/home/arkady/dev/mesto-react-auth/src/components/popups/SubmitPopup.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":152,"column":6,"nodeType":"99","endLine":152,"endColumn":8,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"101","line":325,"column":6,"nodeType":"99","endLine":325,"endColumn":8,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":16},{"ruleId":"103","severity":1,"message":"107","line":2,"column":18,"nodeType":"105","messageId":"106","endLine":2,"endColumn":22},{"ruleId":"103","severity":1,"message":"108","line":2,"column":24,"nodeType":"105","messageId":"106","endLine":2,"endColumn":29},{"ruleId":"103","severity":1,"message":"109","line":2,"column":31,"nodeType":"105","messageId":"106","endLine":2,"endColumn":43},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'closeAllPopups'. Either include it or remove the dependency array.","ArrayExpression",["112"],"React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["113"],"no-unused-vars","'Formik' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Field' is defined but never used.","'ErrorMessage' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [closeAllPopups]",{"range":"118","text":"119"},"Update the dependencies array to be: [history]",{"range":"120","text":"121"},[3652,3654],"[closeAllPopups]",[7658,7660],"[history]"]