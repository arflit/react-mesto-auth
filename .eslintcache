[{"/home/arkady/dev/mesto-react/src/index.js":"1","/home/arkady/dev/mesto-react/src/reportWebVitals.js":"2","/home/arkady/dev/mesto-react/src/components/App.js":"3","/home/arkady/dev/mesto-react/src/components/Header.js":"4","/home/arkady/dev/mesto-react/src/components/Main.js":"5","/home/arkady/dev/mesto-react/src/components/Footer.js":"6","/home/arkady/dev/mesto-react/src/components/PopupWithForm.js":"7","/home/arkady/dev/mesto-react/src/components/ImagePopup.js":"8","/home/arkady/dev/mesto-react/src/components/Card.js":"9","/home/arkady/dev/mesto-react/src/utils/api.js":"10","/home/arkady/dev/mesto-react/src/contexts/CurrentUserContext.js":"11","/home/arkady/dev/mesto-react/src/components/EditProfilePopup.js":"12","/home/arkady/dev/mesto-react/src/components/EditAvatarPopup.js":"13","/home/arkady/dev/mesto-react/src/components/AddPlacePopup.js":"14","/home/arkady/dev/mesto-react/src/components/Login.js":"15","/home/arkady/dev/mesto-react/src/components/Register.js":"16","/home/arkady/dev/mesto-react/src/components/PopupWithTooltip.js":"17","/home/arkady/dev/mesto-react/src/components/ProtectedRoute.js":"18"},{"size":603,"mtime":1614932493375,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1612357123836,"results":"21","hashOfConfig":"20"},{"size":7482,"mtime":1615090891465,"results":"22","hashOfConfig":"20"},{"size":1028,"mtime":1615091370668,"results":"23","hashOfConfig":"20"},{"size":2891,"mtime":1615089463653,"results":"24","hashOfConfig":"20"},{"size":203,"mtime":1613742228683,"results":"25","hashOfConfig":"20"},{"size":913,"mtime":1613640780757,"results":"26","hashOfConfig":"20"},{"size":760,"mtime":1613575574358,"results":"27","hashOfConfig":"20"},{"size":1474,"mtime":1613742295947,"results":"28","hashOfConfig":"20"},{"size":2505,"mtime":1615085625408,"results":"29","hashOfConfig":"20"},{"size":85,"mtime":1613576203582,"results":"30","hashOfConfig":"20"},{"size":1910,"mtime":1613735379761,"results":"31","hashOfConfig":"20"},{"size":908,"mtime":1613642642514,"results":"32","hashOfConfig":"20"},{"size":1543,"mtime":1613735376841,"results":"33","hashOfConfig":"20"},{"size":2245,"mtime":1615091002850,"results":"34","hashOfConfig":"20"},{"size":2349,"mtime":1615084539546,"results":"35","hashOfConfig":"20"},{"size":979,"mtime":1615063385872,"results":"36","hashOfConfig":"20"},{"size":322,"mtime":1615086672745,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1et24kw",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/home/arkady/dev/mesto-react/src/index.js",[],["79","80"],"/home/arkady/dev/mesto-react/src/reportWebVitals.js",[],"/home/arkady/dev/mesto-react/src/components/App.js",["81"],"import React from 'react'\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom'\n\n\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport Login from './Login.js'\nimport Register from './Register.js'\n\nimport { api, authApi } from '../utils/api'\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction App() {\n\n  const history = useHistory();\n\n  const [loggedIn, setLoggedIn] = React.useState(true)\n\n  const [email, setEmail] = React.useState('');\n\n  function onSignOut() {\n    setLoggedIn(false);\n    localStorage.removeItem('token');\n    console.log('разлогиниться')\n  }\n\n  function onSignIn(email) {\n    setLoggedIn(true);\n    setEmail(email)\n  }\n\n  React.useEffect(() => {\n    authApi\n      .checkToken()\n      .then((data) => {\n        console.log(data)\n        setEmail(data.email)\n        setLoggedIn(true)\n      })\n      .then(() => {})\n      .catch((err) => {\n        setLoggedIn(false)\n        console.log(`Не удалось авторизоваться: ${err}`)\n      })\n  }, [])\n\n  const [isTooltipOpen, setTooltipOpen] = React.useState(false)\n  function handleTooltipOpen() {\n    setTooltipOpen(true)\n  }\n\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false)\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true)\n  }\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(\n    false\n  )\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true)\n  }\n\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false)\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true)\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false)\n    setEditProfilePopupOpen(false)\n    setAddPlacePopupOpen(false)\n    setTooltipOpen(false)\n    setSelectedCard({})\n  }\n\n  const [selectedCard, setSelectedCard] = React.useState({})\n  function handleCardClick(card) {\n    setSelectedCard(card)\n  }\n\n  const [currentUser, setCurrentUser] = React.useState({\n    avatar:\n      'https://github.com/konjvpaljto/mesto/blob/master/src/images/avatar.jpg?raw=true',\n    name: 'Жак Ив-Кусто',\n    about: 'Исследователь океана',\n  })\n\n  function handleUpdateUser(data) {\n    api\n      .updateUserInfo(data)\n      .then((data) => {\n        setCurrentUser(data)\n      })\n      .then(() => {\n        closeAllPopups()\n      })\n      .catch((err) => {\n        console.log(`Не удалось обновить данные пользователя: ${err}`)\n      })\n  }\n\n  function handleUpdateAvatar(data) {\n    api\n      .setNewAvatar(data.avatar)\n      .then(() => {\n        setCurrentUser({\n          avatar: data.avatar,\n          name: currentUser.name,\n          about: currentUser.about,\n        })\n      })\n      .then(() => {\n        closeAllPopups()\n      })\n      .catch((err) => {\n        console.log(`Не удалось обновить аватар: ${err}`)\n      })\n  }\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((data) => {\n        setCurrentUser(data)\n      })\n      .catch((err) => {\n        console.log(`Не удалось загрузить данные пользователя: ${err}`)\n      })\n  }, [])\n\n  React.useEffect(() => {\n    const onKeypress = (evt) => {\n      if (evt.key === 'Escape') {\n        closeAllPopups()\n      }\n    }\n\n    document.addEventListener('keydown', onKeypress)\n\n    return () => {\n      document.removeEventListener('keydown', onKeypress)\n    }\n  }, [])\n\n  const [cards, setCards] = React.useState([])\n  React.useEffect(() => {\n    api\n      .getInitialCards()\n      .then((data) => {\n        setCards(data)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }, [])\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id)\n\n    function updateCards(newCard) {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => (c._id === card._id ? newCard : c))\n      // Обновляем стейт\n      setCards(newCards)\n    }\n\n    if (isLiked) {\n      api\n        .removeCardLike(card._id)\n        .then((newCard) => {\n          updateCards(newCard)\n        })\n        .catch((err) => {\n          console.log(`Не удалось поставить лайк: ${err}`)\n        })\n    } else {\n      api\n        .addCardLike(card._id)\n        .then((newCard) => {\n          updateCards(newCard)\n        })\n        .catch((err) => {\n          console.log(`Не удалось снять лайк: ${err}`)\n        })\n    }\n  }\n\n  function handleCardDelete(card) {\n    const isOwn = card.owner._id === currentUser._id\n    if (isOwn) {\n      api\n        .removeCard(card._id)\n        .then(() => {\n          const newCards = cards.filter((c) => {\n            if (c._id === card._id) {\n              return false\n            } else {\n              return true\n            }\n          })\n          setCards(newCards)\n        })\n        .catch((err) => {\n          console.log(`Не удалось удалить карточку: ${err}`)\n        })\n    } else {\n      console.log(\n        `Не удалось удалить карточку: вы не хозяин. Нечего на скрытые кнопки жать!`\n      )\n    }\n  }\n\n  function handleAddPlaceSubmit(data) {\n    api\n      .addNewCard(data)\n      .then((newCard) => {\n        setCards([newCard, ...cards])\n      })\n      .then(() => {\n        closeAllPopups()\n      })\n      .catch((err) => {\n        console.log(`Не удалось добавить карточку: ${err}`)\n      })\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header\n        email={email}\n        loggedIn={loggedIn}\n        onSignOut={onSignOut} />\n        <Switch>\n          <Route path=\"/sign-in\">\n            <Login isOpen={isTooltipOpen} onClose={closeAllPopups} openTooltip={handleTooltipOpen} onSignIn={onSignIn} />\n          </Route>\n          <Route path=\"/sign-up\">\n            <Register isOpen={isTooltipOpen} onClose={closeAllPopups} openTooltip={handleTooltipOpen} />\n          </Route>\n          <ProtectedRoute\n            path=\"/cards\"\n            loggedIn={loggedIn}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            cards={cards}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n            isEditAvatarPopupOpen={isEditAvatarPopupOpen}\n            onUpdateAvatar={handleUpdateAvatar}\n            isEditProfilePopupOpen={isEditProfilePopupOpen}\n            onUpdateUser={handleUpdateUser}\n            isAddPlacePopupOpen={isAddPlacePopupOpen}\n            onAddCard={handleAddPlaceSubmit}\n            selectedCard={selectedCard}\n            onClose={closeAllPopups}\n            component={Main}\n          />\n          <Route path=\"/\">\n            {loggedIn ? <Redirect to=\"/cards\" /> : <Redirect to=\"/sign-in\" />}\n          </Route>\n        </Switch>\n        <Footer />\n      </div>\n    </CurrentUserContext.Provider>\n  )\n}\n\nexport default App\n","/home/arkady/dev/mesto-react/src/components/Header.js",[],"/home/arkady/dev/mesto-react/src/components/Main.js",[],"/home/arkady/dev/mesto-react/src/components/Footer.js",[],"/home/arkady/dev/mesto-react/src/components/PopupWithForm.js",[],["82","83"],"/home/arkady/dev/mesto-react/src/components/ImagePopup.js",[],"/home/arkady/dev/mesto-react/src/components/Card.js",[],"/home/arkady/dev/mesto-react/src/utils/api.js",[],"/home/arkady/dev/mesto-react/src/contexts/CurrentUserContext.js",[],"/home/arkady/dev/mesto-react/src/components/EditProfilePopup.js",[],"/home/arkady/dev/mesto-react/src/components/EditAvatarPopup.js",[],"/home/arkady/dev/mesto-react/src/components/AddPlacePopup.js",[],"/home/arkady/dev/mesto-react/src/components/Login.js",[],"/home/arkady/dev/mesto-react/src/components/Register.js",["84"],"import React from 'react';\nimport PopupWithTooltip from './PopupWithTooltip';\nimport { authApi } from '../utils/api'\n\n\nfunction Register(props) {\n\n  const { isOpen, onClose, openTooltip } = props;\n\n  const [result, setResult] = React.useState('false');\n\n  const [email, setEmail] = React.useState('')\n  function handleChangeEmail(e) {\n    setEmail(e.target.value)\n  }\n\n  const [password, setPassword] = React.useState('')\n  function handleChangePassword(e) {\n    setPassword(e.target.value)\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log('делаю запрос')\n    authApi.signUp({\n      password,\n      email\n    })\n    .then((data) => {\n      console.log(data)\n      setResult(true)\n      openTooltip()\n    })\n    .catch((err) => {\n      console.log(err)\n      setResult(false)\n      openTooltip()\n    })\n  }\n\n  return (\n    <main className=\"content\">\n      <div className=\"login-container\">\n        <form className=\"login-form\" noValidate onSubmit={handleSubmit}>\n          <h2 className=\"login-form__title\">Регистрация</h2>\n          <input\n            type=\"email\"\n            className=\"login-form__input\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            required\n            value={email}\n            onChange={handleChangeEmail}\n          />\n          <div className=\"popup__form-error-container\">\n            <span className=\"email-error popup__form-error\"></span>\n          </div>\n          <input\n            type=\"password\"\n            className=\"login-form__input\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Пароль\"\n            required\n            value={password}\n            onChange={handleChangePassword}\n          />\n          <div className=\"popup__form-error-container\">\n            <span className=\"password-error popup__form-error\"></span>\n          </div>\n          <button type=\"submit\" className=\"login-form__button button\" >\n            Зарегистрироваться\n          </button>\n          <a className=\"login-form__bottomlink button\" href='/sign-in'>Уже зарегистрированы? Войти</a>\n        </form>\n      </div>\n      <PopupWithTooltip\n      isOpen={isOpen}\n      onClose={onClose}\n      result={result}\n      />\n    </main>\n  )\n}\n\nexport default Register;\n","/home/arkady/dev/mesto-react/src/components/PopupWithTooltip.js",["85"],"import React from 'react';\nimport sucess from '../images/sucess.png';\nimport fail from '../images/fail.png';\n\nfunction PopupWithTooltip(props) {\n  const { isOpen, onClose, result } = props;\n\n  function handleOverlayClose(evt) {\n    if (evt.target.classList.contains('popup')) {onClose()}\n  }\n\n  return (\n    <div className={`popup ${isOpen && 'popup_opened'}`} onClick={handleOverlayClose} >\n      <div className=\"popup__container popup__container_tooltip\">\n        <button\n          type=\"button\"\n          className=\"popup__close-button button\"\n          onClick={onClose}\n        ></button>\n        <img src={result ? sucess : fail} className='popup__tooltip-image' alt={result ? 'Успех!' : 'Ошибка!'}/>\n        <h2 className=\"popup__tooltip-title\">{result ? 'Вы успешно зарегистрировались!' : `Что-то пошло не так!\nПопробуйте ещё раз.`}</h2>\n      </div>\n    </div>\n  )\n}\n\nexport default PopupWithTooltip;\n","/home/arkady/dev/mesto-react/src/components/ProtectedRoute.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":17,"column":9,"nodeType":"92","messageId":"93","endLine":17,"endColumn":16},{"ruleId":"86","replacedBy":"94"},{"ruleId":"88","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":75,"column":61,"nodeType":"98","messageId":"99","endLine":75,"endColumn":71,"fix":"100"},{"ruleId":"96","severity":1,"message":"97","line":20,"column":53,"nodeType":"98","messageId":"99","endLine":20,"endColumn":75,"fix":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar",["102"],["103"],"jsx-quotes","Unexpected usage of singlequote.","Literal","unexpected",{"range":"104","text":"105"},{"range":"106","text":"107"},"no-global-assign","no-unsafe-negation",[2062,2072],"\"/sign-in\"",[646,668],"\"popup__tooltip-image\""]