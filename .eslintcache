[{"/home/arkady/dev/mesto-react/src/index.js":"1","/home/arkady/dev/mesto-react/src/reportWebVitals.js":"2","/home/arkady/dev/mesto-react/src/components/App.js":"3","/home/arkady/dev/mesto-react/src/components/Header.js":"4","/home/arkady/dev/mesto-react/src/components/Main.js":"5","/home/arkady/dev/mesto-react/src/components/Footer.js":"6","/home/arkady/dev/mesto-react/src/components/PopupWithForm.js":"7","/home/arkady/dev/mesto-react/src/components/ImagePopup.js":"8","/home/arkady/dev/mesto-react/src/components/Card.js":"9","/home/arkady/dev/mesto-react/src/utils/api.js":"10","/home/arkady/dev/mesto-react/src/contexts/CurrentUserContext.js":"11","/home/arkady/dev/mesto-react/src/components/EditProfilePopup.js":"12","/home/arkady/dev/mesto-react/src/components/EditAvatarPopup.js":"13","/home/arkady/dev/mesto-react/src/components/AddPlacePopup.js":"14","/home/arkady/dev/mesto-react/src/components/Login.js":"15","/home/arkady/dev/mesto-react/src/components/Register.js":"16","/home/arkady/dev/mesto-react/src/components/PopupWithTooltip.js":"17","/home/arkady/dev/mesto-react/src/components/ProtectedRoute.js":"18"},{"size":637,"mtime":1615161466841,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1612357123836,"results":"21","hashOfConfig":"20"},{"size":9341,"mtime":1615162587267,"results":"22","hashOfConfig":"20"},{"size":1257,"mtime":1615161680594,"results":"23","hashOfConfig":"20"},{"size":2093,"mtime":1615143709919,"results":"24","hashOfConfig":"20"},{"size":203,"mtime":1613742228683,"results":"25","hashOfConfig":"20"},{"size":913,"mtime":1613640780757,"results":"26","hashOfConfig":"20"},{"size":760,"mtime":1613575574358,"results":"27","hashOfConfig":"20"},{"size":1474,"mtime":1613742295947,"results":"28","hashOfConfig":"20"},{"size":2505,"mtime":1615085625408,"results":"29","hashOfConfig":"20"},{"size":85,"mtime":1613576203582,"results":"30","hashOfConfig":"20"},{"size":1910,"mtime":1613735379761,"results":"31","hashOfConfig":"20"},{"size":942,"mtime":1615146889033,"results":"32","hashOfConfig":"20"},{"size":1578,"mtime":1615146072777,"results":"33","hashOfConfig":"20"},{"size":1711,"mtime":1615140467850,"results":"34","hashOfConfig":"20"},{"size":1931,"mtime":1615143419153,"results":"35","hashOfConfig":"20"},{"size":1048,"mtime":1615145569214,"results":"36","hashOfConfig":"20"},{"size":322,"mtime":1615086672745,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"fu3bww",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/home/arkady/dev/mesto-react/src/index.js",[],["77","78"],"/home/arkady/dev/mesto-react/src/reportWebVitals.js",[],"/home/arkady/dev/mesto-react/src/components/App.js",["79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97"],"import React from 'react'\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom'\n\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\n\nimport Login from './Login.js'\nimport Register from './Register.js'\n\nimport PopupWithTooltip from './PopupWithTooltip'\nimport ImagePopup from './ImagePopup'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\n\nimport { api, authApi } from '../utils/api'\nimport ProtectedRoute from './ProtectedRoute'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction App() {\n  //техническое\n  const history = useHistory()\n\n  //основные переменные\n  const [loggedIn, setLoggedIn] = React.useState(false)\n  const [cards, setCards] = React.useState([])\n\n  //информация о пользователе\n  const [email, setEmail] = React.useState('')\n  const [currentUser, setCurrentUser] = React.useState({\n    avatar:\n      'https://github.com/konjvpaljto/mesto/blob/master/src/images/avatar.jpg?raw=true',\n    name: 'Жак Ив-Кусто',\n    about: 'Исследователь океана',\n  })\n\n  //состояние попапов\n  const [isTooltipOpen, setTooltipOpen] = React.useState(false)\n  const [tooltipResult, setTooltipResult] = React.useState(false)\n  const [tooltipMessage, setTooltipMessage] = React.useState('')\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false)\n  const [isProfilePopupOpen, setProfilePopupOpen] = React.useState(false)\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false)\n  const [selectedCard, setSelectedCard] = React.useState({})\n\n  //функции управления попапами\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false)\n    setProfilePopupOpen(false)\n    setAddPlacePopupOpen(false)\n    setTooltipOpen(false)\n    setTooltipMessage('')\n    setSelectedCard({})\n  }\n\n  function handleTooltipOpen(result, message) {\n    setTooltipResult(result)\n    setTooltipOpen(true)\n    setTooltipMessage(message)\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true)\n  }\n\n  function handleProfileClick() {\n    setProfilePopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true)\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card)\n  }\n\n  React.useEffect(() => {\n    const onKeypress = (evt) => {\n      if (evt.key === 'Escape') {\n        closeAllPopups()\n      }\n    }\n\n    document.addEventListener('keydown', onKeypress)\n\n    return () => {\n      document.removeEventListener('keydown', onKeypress)\n    }\n  }, [])\n\n  //функции регистрации и авторизации\n  function onSignUp(data) {\n    authApi\n      .signUp(data)\n      .then(() => {\n        handleTooltipOpen(true)\n      })\n      .then(() => {\n        setTimeout(() => {\n          onSignIn(data)\n          closeAllPopups()\n        }, 1500)\n      })\n      .catch((err) => {\n        handleTooltipOpen(false, `Не получилось зарегистрироваться: ${err}`)\n      })\n  }\n\n  function onSignIn(data) {\n    authApi\n      .signIn(data)\n      .then((res) => {\n        localStorage.setItem('token', res.token)\n        setLoggedIn(true)\n        setEmail(data.email)\n      })\n      .then(() => {\n        history.push('/cards')\n      })\n      .catch((err) => {\n        handleTooltipOpen(false, `Не получилось войти: ${err}`)\n      })\n  }\n\n  function onSignOut() {\n    setLoggedIn(false)\n    localStorage.removeItem('token')\n  }\n\n  //функции управления данными пользователя\n  function handleUpdateUser(data) {\n    api\n      .updateUserInfo(data)\n      .then((data) => {\n        setCurrentUser(data)\n      })\n      .then(() => {\n        closeAllPopups()\n      })\n      .catch((err) => {\n        closeAllPopups()\n        handleTooltipOpen(\n          false,\n          `Не удалось обновить данные пользователя: ${err}`\n        )\n      })\n  }\n\n  function handleUpdateAvatar(data) {\n    api\n      .setNewAvatar(data.avatar)\n      .then(() => {\n        setCurrentUser({\n          ...currentUser,\n          avatar: data.avatar,\n        })\n      })\n      .then(() => {\n        closeAllPopups()\n      })\n      .catch((err) => {\n        closeAllPopups()\n        handleTooltipOpen(false, `Не удалось обновить аватар: ${err}`)\n      })\n  }\n\n  // Функции управления контентом\n\n  function handleAddPlace(data) {\n    api\n      .addNewCard(data)\n      .then((newCard) => {\n        setCards([newCard, ...cards])\n      })\n      .then(() => {\n        closeAllPopups()\n      })\n      .catch((err) => {\n        closeAllPopups()\n        handleTooltipOpen(false, `Не удалось добавить карточку: ${err}`)\n      })\n  }\n\n  function handleCardDelete(card) {\n    const isOwn = card.owner._id === currentUser._id\n    if (isOwn) {\n      api\n        .removeCard(card._id)\n        .then(() => {\n          const newCards = cards.filter((c) => {\n            if (c._id === card._id) {\n              return false\n            } else {\n              return true\n            }\n          })\n          setCards(newCards)\n        })\n        .catch((err) => {\n          handleTooltipOpen(false, `Не удалось удалить карточку: ${err}`)\n        })\n    } else {\n      handleTooltipOpen(\n        false,\n        `Не удалось удалить карточку: вы не хозяин. Нечего на скрытые кнопки жать!`\n      )\n    }\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id)\n\n    function updateCards(newCard) {\n      const newCards = cards.map((c) => (c._id === card._id ? newCard : c))\n      setCards(newCards)\n    }\n\n    if (isLiked) {\n      api\n        .removeCardLike(card._id)\n        .then((newCard) => {\n          updateCards(newCard)\n        })\n        .catch((err) => {\n          handleTooltipOpen(false, `Не удалось поставить лайк: ${err}`)\n        })\n    } else {\n      api\n        .addCardLike(card._id)\n        .then((newCard) => {\n          updateCards(newCard)\n        })\n        .catch((err) => {\n          handleTooltipOpen(false, `Не удалось снять лайк: ${err}`)\n        })\n    }\n  }\n\n  // Функции при загрузке страницы\n\n  React.useEffect(() => {\n    if (localStorage.getItem('token')) {\n      authApi\n        .checkToken()\n        .then((data) => {\n          setEmail(data.data.email)\n          setLoggedIn(true)\n        })\n        .then(() => {\n          history.push('/cards')\n        })\n        .catch((err) => {\n          setLoggedIn(false)\n          handleTooltipOpen(false, `Не удалось авторизоваться: ${err}`)\n        })\n    }\n  }, [])\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((data) => {\n        setCurrentUser(data)\n      })\n      .catch((err) => {\n        handleTooltipOpen(\n          false,\n          `Не удалось загрузить данные пользователя: ${err}`\n        )\n      })\n  }, [email])\n\n  React.useEffect(() => {\n    api\n      .getInitialCards()\n      .then((data) => {\n        setCards(data)\n      })\n      .catch((err) => {\n        handleTooltipOpen(\n          false,\n          `Не удалось загрузить карточки с сервера: ${err}`\n        )\n      })\n  }, [email])\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <Switch>\n     {/*  <div className=\"page\">\n        <Header email={email} loggedIn={loggedIn} onSignOut={onSignOut} /> */}\n\n          <Route path=\"/sign-in\">\n            <Login onSignIn={onSignIn} />\n          </Route>\n          <Route path=\"/sign-up\">\n            <Register onSignUp={onSignUp} />\n          </Route>\n          <ProtectedRoute\n            path=\"/cards\"\n            loggedIn={loggedIn}\n            onEditProfile={handleProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            cards={cards}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n            component={Main}\n          />\n          <Route path=\"/\">\n            {loggedIn ? <Redirect to=\"/cards\" /> : <Redirect to=\"/sign-in\" />}\n          </Route>\n\n        {/* <Footer />\n        <PopupWithTooltip\n          isOpen={isTooltipOpen}\n          onClose={closeAllPopups}\n          result={tooltipResult}\n          message={tooltipMessage}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <EditProfilePopup\n          isOpen={isProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddCard={handleAddPlace}\n        />\n        <ImagePopup onClose={closeAllPopups} card={selectedCard} />\n      </div> */}\n      </Switch>\n    </CurrentUserContext.Provider>\n  )\n}\n\nexport default App\n","/home/arkady/dev/mesto-react/src/components/Header.js",[],"/home/arkady/dev/mesto-react/src/components/Main.js",[],"/home/arkady/dev/mesto-react/src/components/Footer.js",[],"/home/arkady/dev/mesto-react/src/components/PopupWithForm.js",[],"/home/arkady/dev/mesto-react/src/components/ImagePopup.js",[],"/home/arkady/dev/mesto-react/src/components/Card.js",[],"/home/arkady/dev/mesto-react/src/utils/api.js",[],"/home/arkady/dev/mesto-react/src/contexts/CurrentUserContext.js",[],"/home/arkady/dev/mesto-react/src/components/EditProfilePopup.js",[],"/home/arkady/dev/mesto-react/src/components/EditAvatarPopup.js",[],"/home/arkady/dev/mesto-react/src/components/AddPlacePopup.js",[],"/home/arkady/dev/mesto-react/src/components/Login.js",[],"/home/arkady/dev/mesto-react/src/components/Register.js",[],"/home/arkady/dev/mesto-react/src/components/PopupWithTooltip.js",["98"],"import React from 'react';\nimport sucess from '../images/sucess.png';\nimport fail from '../images/fail.png';\n\nfunction PopupWithTooltip(props) {\n  const { isOpen, onClose, result, message } = props;\n\n  function handleOverlayClose(evt) {\n    if (evt.target.classList.contains('popup')) {onClose()}\n  }\n\n  return (\n    <div className={`popup ${isOpen && 'popup_opened'}`} onClick={handleOverlayClose} >\n      <div className=\"popup__container popup__container_tooltip\">\n        <button\n          type=\"button\"\n          className=\"popup__close-button button\"\n          onClick={onClose}\n        ></button>\n        <img src={result ? sucess : fail} className='popup__tooltip-image' alt={result ? 'Успех!' : 'Ошибка!'}/>\n        <h2 className=\"popup__tooltip-title\">{result ? 'Вы успешно зарегистрировались!' : `Что-то пошло не так!\nПопробуйте ещё раз.`}</h2>\n        <p className=\"popup__tooltip-message\">{message}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default PopupWithTooltip;\n","/home/arkady/dev/mesto-react/src/components/ProtectedRoute.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":14},{"ruleId":"103","severity":1,"message":"107","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":14},{"ruleId":"103","severity":1,"message":"108","line":11,"column":8,"nodeType":"105","messageId":"106","endLine":11,"endColumn":24},{"ruleId":"103","severity":1,"message":"109","line":12,"column":8,"nodeType":"105","messageId":"106","endLine":12,"endColumn":18},{"ruleId":"103","severity":1,"message":"110","line":13,"column":8,"nodeType":"105","messageId":"106","endLine":13,"endColumn":24},{"ruleId":"103","severity":1,"message":"111","line":14,"column":8,"nodeType":"105","messageId":"106","endLine":14,"endColumn":23},{"ruleId":"103","severity":1,"message":"112","line":15,"column":8,"nodeType":"105","messageId":"106","endLine":15,"endColumn":21},{"ruleId":"103","severity":1,"message":"113","line":39,"column":10,"nodeType":"105","messageId":"106","endLine":39,"endColumn":23},{"ruleId":"103","severity":1,"message":"114","line":40,"column":10,"nodeType":"105","messageId":"106","endLine":40,"endColumn":23},{"ruleId":"103","severity":1,"message":"115","line":41,"column":10,"nodeType":"105","messageId":"106","endLine":41,"endColumn":24},{"ruleId":"103","severity":1,"message":"116","line":42,"column":10,"nodeType":"105","messageId":"106","endLine":42,"endColumn":31},{"ruleId":"103","severity":1,"message":"117","line":43,"column":10,"nodeType":"105","messageId":"106","endLine":43,"endColumn":28},{"ruleId":"103","severity":1,"message":"118","line":44,"column":10,"nodeType":"105","messageId":"106","endLine":44,"endColumn":29},{"ruleId":"103","severity":1,"message":"119","line":45,"column":10,"nodeType":"105","messageId":"106","endLine":45,"endColumn":22},{"ruleId":"103","severity":1,"message":"120","line":127,"column":12,"nodeType":"105","messageId":"106","endLine":127,"endColumn":21},{"ruleId":"103","severity":1,"message":"121","line":133,"column":12,"nodeType":"105","messageId":"106","endLine":133,"endColumn":28},{"ruleId":"103","severity":1,"message":"122","line":151,"column":12,"nodeType":"105","messageId":"106","endLine":151,"endColumn":30},{"ruleId":"103","severity":1,"message":"123","line":171,"column":12,"nodeType":"105","messageId":"106","endLine":171,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":259,"column":6,"nodeType":"126","endLine":259,"endColumn":8,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":20,"column":53,"nodeType":"130","messageId":"131","endLine":20,"endColumn":75,"fix":"132"},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'PopupWithTooltip' is defined but never used.","'ImagePopup' is defined but never used.","'EditProfilePopup' is defined but never used.","'EditAvatarPopup' is defined but never used.","'AddPlacePopup' is defined but never used.","'isTooltipOpen' is assigned a value but never used.","'tooltipResult' is assigned a value but never used.","'tooltipMessage' is assigned a value but never used.","'isEditAvatarPopupOpen' is assigned a value but never used.","'isProfilePopupOpen' is assigned a value but never used.","'isAddPlacePopupOpen' is assigned a value but never used.","'selectedCard' is assigned a value but never used.","'onSignOut' is defined but never used.","'handleUpdateUser' is defined but never used.","'handleUpdateAvatar' is defined but never used.","'handleAddPlace' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["135"],"jsx-quotes","Unexpected usage of singlequote.","Literal","unexpected",{"range":"136","text":"137"},"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},[655,677],"\"popup__tooltip-image\"","Update the dependencies array to be: [history]",{"range":"140","text":"141"},[6449,6451],"[history]"]